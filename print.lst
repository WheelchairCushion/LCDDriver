


ARM Macro Assembler    Page 1 


    1 00000000         ; print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for the Kentec EB-LM4F120-L
                       35
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these two
                        functions
    8 00000000         
    9 00000000         ;  Data pin assignments:
   10 00000000         ;  PB0-7   LCD parallel data input
   11 00000000         ;
   12 00000000         ;  Control pin assignments:
   13 00000000         ;  PA4     RD  Read control signal             ---------
                       ----------------
   14 00000000         ;  PA5     WR  Write control signal            | PA7 | P
                       A6 | PA5 | PA4 |
   15 00000000         ;  PA6     RS  Register/Data select signal     | CS  | R
                       S  | WR  | RD  |
   16 00000000         ;  PA7     CS  Chip select signal              ---------
                       ----------------
   17 00000000         ;
   18 00000000         ;  Touchpad pin assignments:
   19 00000000         ;  PA2     Y-                                  ---------
                       ----  -------------
   20 00000000         ;  PA3     X-                                  | PA3 | P
                       A2 |  | PE5 | PE4 |
   21 00000000         ;  PE4     X+    AIN9                          | X-  | Y
                       -  |  | Y+  | X+  |
   22 00000000         ;  PE5     Y+    AIN8                          ---------
                       ----  -------------
   23 00000000         
   24 00000000                 IMPORT           LCD_OutChar
   25 00000000                 IMPORT           LCD_Goto
   26 00000000                 IMPORT           LCD_OutString
   27 00000000                 EXPORT           LCD_OutDec
   28 00000000                 EXPORT           LCD_OutFix
   29 00000000         
   30 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   31 00000000                 THUMB
   32 00000000                 ALIGN
   33 00000000         
   34 00000000 00002710 
                       MAX     EQU              10000
   35 00000000 000003E8 
                       THOUSAND
                               EQU              1000
   36 00000000 FFFFFFFF 
                       fin     EQU              0xFFFFFFFF
   37 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   38 00000000         ; Output a 32-bit number in unsigned decimal format
   39 00000000         ; Input: R0 (call by value) 32-bit unsigned number 
   40 00000000         ; Output: none
   41 00000000         ; Invariables: This function must not permanently modify



ARM Macro Assembler    Page 2 


                        registers R4 to R11
   42 00000000         LCD_OutDec
   43 00000000 B570            PUSH             {R4,R5,R6,LR} ; save registers
   44 00000002 F04F 050A       MOV              R5, #10
   45 00000006 F04F 020A       MOV              R2, #10     ; divisor in mod fu
                                                            nction
   46 0000000A F04F 0300       MOV              R3, #0x00   ; number of digits 
                                                            counter 
   47 0000000E 4601            MOV              R1, R0      ; save the value of
                                                             R0 (input)
   48 00000010         Reinit
   49 00000010 4608            MOV              R0, R1
   50 00000012         NumDiv
   51 00000012 4290            CMP              R0, R2
   52 00000014 D302            BLO              AsciiConv
   53 00000016 EBA0 0002       SUB              R0, R0, R2  ; divide R1 by mult
                                                            iples of 10 to find
                                                             modulo
   54 0000001A E7FA            B                NumDiv
   55 0000001C         AsciiConv
   56 0000001C FBB2 F4F5       UDIV             R4, R2, R5  ; R4 = R2/10, R4 is
                                                             divisor of R0  
   57 00000020 FBB0 F0F4       UDIV             R0, R0, R4
   58 00000024 F100 0030       ADD              R0, R0, #0x30 ; make R0 into AS
                                                            CII character 
   59 00000028 B401            PUSH             {R0}
   60 0000002A F103 0301       ADD              R3, R3, #1  ; increment counter
                                                             
   61 0000002E 4608            MOV              R0, R1
   62 00000030 FBB0 F0F2       UDIV             R0, R0, R2  ; check if it is ne
                                                            cessary to continue
                                                             separating R0
   63 00000034 2800            CMP              R0, #0
   64 00000036 D008            BEQ              Output
   65 00000038 FB02 F205       MUL              R2, R2, R5
   66 0000003C F04F 36FF       LDR              R6, =fin
   67 00000040 EBA6 0601       SUB              R6,R6,R1    ; check for final i
                                                            nput  
   68 00000044 2E00            CMP              R6, #0
   69 00000046 D00A            BEQ              Incase
   70 00000048 E7E2            B                Reinit
   71 0000004A         Output
   72 0000004A 2B00            CMP              R3, #0x00   ; decrementing coun
                                                            ter 
   73 0000004C D012            BEQ              Done
   74 0000004E BC01            POP              {R0}
   75 00000050 B408            PUSH             {R3}        ; save value before
                                                             going to new subro
                                                            utine 
   76 00000052 F7FF FFFE       BL               LCD_OutChar
   77 00000056 BC08            POP              {R3}
   78 00000058 F1A3 0301       SUB              R3, R3, #0x01
   79 0000005C E7F5            B                Output
   80 0000005E         Incase
   81 0000005E 2B09            CMP              R3, #9      ; check if digits h
                                                            as been reached 
   82 00000060 D000            BEQ              Pop4
   83 00000062 E7D5            B                Reinit
   84 00000064 F04F 0004 



ARM Macro Assembler    Page 3 


                       Pop4    MOV              R0,#4
   85 00000068 F100 0030       ADD              R0, R0, #0x30
   86 0000006C B401            PUSH             {R0}
   87 0000006E F103 0301       ADD              R3,R3,#1
   88 00000072 E7EA            B                Output
   89 00000074         Done
   90 00000074 BD70            POP              {R4,R5,R6,PC} ; restore saved r
                                                            egisters 
   91 00000076 4770            BX               LR
   92 00000078         ;* * * * * * * * End of LCD_OutDec * * * * * * * * 
   93 00000078         
   94 00000078         ; -----------------------LCD _OutFix--------------------
                       --
   95 00000078         ; Output characters to LCD display in fixed-point format
                       
   96 00000078         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99 
   97 00000078         ; Inputs:  R0 is an unsigned 32-bit number
   98 00000078         ; Outputs: none
   99 00000078         ; E.g., R0=0,    then output "0.000 " 
  100 00000078         ;       R0=3,    then output "0.003 " 
  101 00000078         ;       R0=89,   then output "0.089 " 
  102 00000078         ;       R0=123,  then output "0.123 " 
  103 00000078         ;       R0=9999, then output "9.999 " 
  104 00000078         ;       R0>9999, then output "*.*** "
  105 00000078         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  106 00000078         LCD_OutFix
  107 00000078 B5F0            PUSH             {R4,R5,R6,R7,LR}
  108 0000007A 4601            MOV              R1, R0
  109 0000007C F04F 050A       MOV              R5, #10
  110 00000080 F04F 0664       MOV              R6, #100
  111 00000084 F242 7310       LDR              R3, =MAX
  112 00000088 1AC4            SUBS             R4, R0, R3  ; check if R0>9999
  113 0000008A D535            BPL              Error
  114 0000008C F04F 37FF       LDR              R7, =fin
  115 00000090 EBA7 0700       SUB              R7, R7, R0
  116 00000094 2F00            CMP              R7, #0
  117 00000096 D02F            BEQ              Error
  118 00000098 F04F 020A       MOV              R2, #10
  119 0000009C F000 F847       BL               Mod         ; Mod = R0%R2 
  120 000000A0 F100 0030       ADD              R0, R0, #0x30 ; make number int
                                                            o ASCII character
  121 000000A4 B401            PUSH             {R0}
  122 000000A6 4608            MOV              R0, R1
  123 000000A8 F04F 0264       MOV              R2, #100
  124 000000AC F000 F83F       BL               Mod
  125 000000B0 FBB0 F0F5       UDIV             R0,R0,R5    ; Hundredth's Digit
                                                             = (R0%100)/10     
                                                                 
  126 000000B4 F100 0030       ADD              R0, R0, #0x30
  127 000000B8 B401            PUSH             {R0}
  128 000000BA 4608            MOV              R0,R1
  129 000000BC F44F 727A       LDR              R2, =THOUSAND
  130 000000C0 F000 F835       BL               Mod
  131 000000C4 FBB0 F0F6       UDIV             R0,R0,R6    ; Tenths's Digit = 
                                                            (R0%1000)/100 
  132 000000C8 F100 0030       ADD              R0, R0, #0x30
  133 000000CC B401            PUSH             {R0}



ARM Macro Assembler    Page 4 


  134 000000CE F04F 002E       MOV              R0, #0x2E   ; ASCII for '.'
  135 000000D2 B401            PUSH             {R0}
  136 000000D4 4608            MOV              R0,R1
  137 000000D6 FBB0 F0F2       UDIV             R0, R0, R2  ; One's Digit = (R0
                                                            /1000) 
  138 000000DA F100 0030       ADD              R0, R0, #0x30
  139 000000DE B401            PUSH             {R0}
  140 000000E0 F04F 0205       MOV              R2, #5
  141 000000E4 2A00    FixedDisplay
                               CMP              R2, #0
  142 000000E6 D020            BEQ              PopStack
  143 000000E8 BC01            POP              {R0}
  144 000000EA B404            PUSH             {R2}
  145 000000EC F7FF FFFE       BL               LCD_OutChar
  146 000000F0 BC04            POP              {R2}
  147 000000F2 F1A2 0201       SUB              R2, #1
  148 000000F6 E7F5            B                FixedDisplay
  149 000000F8         Error                                ; subroutine to dis
                                                            play "*.***"
  150 000000F8 F04F 0303       MOV              R3, #3      ; counter
  151 000000FC F04F 002A       MOV              R0, #0x2A   ; ASCII for '*'
  152 00000100 B408            PUSH             {R3}
  153 00000102 F7FF FFFE       BL               LCD_OutChar
  154 00000106 BC08            POP              {R3}
  155 00000108 F04F 002E       MOV              R0, #0x2E   ; ASCII for '.'
  156 0000010C B408            PUSH             {R3}
  157 0000010E F7FF FFFE       BL               LCD_OutChar
  158 00000112 BC08            POP              {R3}
  159 00000114         Repeat
  160 00000114 2B00            CMP              R3, #0
  161 00000116 D008            BEQ              PopStack
  162 00000118 F04F 002A       MOV              R0, #0x2A
  163 0000011C B408            PUSH             {R3}
  164 0000011E F7FF FFFE       BL               LCD_OutChar
  165 00000122 BC08            POP              {R3}
  166 00000124 F1A3 0301       SUB              R3,R3, #1
  167 00000128 E7F4            B                Repeat
  168 0000012A         PopStack
  169 0000012A BDF0            POP              {R4,R5,R6,R7,PC}
  170 0000012C 4770            BX               LR
  171 0000012E         Mod                                  ; performs R0%R2, o
                                                            utputs on R0
  172 0000012E 4290            CMP              R0, R2
  173 00000130 DB02            BLT              Finish
  174 00000132 EBA0 0002       SUB              R0, R0, R2
  175 00000136 E7FA            B                Mod
  176 00000138         Finish
  177 00000138 4770            BX               LR
  178 0000013A         
  179 0000013A         ;* * * * * * * * End of LCD_OutFix * * * * * * * * 
  180 0000013A         
  181 0000013A         
  182 0000013A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  183 0000013C                 PRESERVE8                    ; fix for PRES8 
  184 0000013C                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\



ARM Macro Assembler    Page 5 


Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 30 in file print.s
   Uses
      None
Comment: .text unused
AsciiConv 0000001C

Symbol: AsciiConv
   Definitions
      At line 55 in file print.s
   Uses
      At line 52 in file print.s
Comment: AsciiConv used once
Done 00000074

Symbol: Done
   Definitions
      At line 89 in file print.s
   Uses
      At line 73 in file print.s
Comment: Done used once
Error 000000F8

Symbol: Error
   Definitions
      At line 149 in file print.s
   Uses
      At line 113 in file print.s
      At line 117 in file print.s

Finish 00000138

Symbol: Finish
   Definitions
      At line 176 in file print.s
   Uses
      At line 173 in file print.s
Comment: Finish used once
FixedDisplay 000000E4

Symbol: FixedDisplay
   Definitions
      At line 141 in file print.s
   Uses
      At line 148 in file print.s
Comment: FixedDisplay used once
Incase 0000005E

Symbol: Incase
   Definitions
      At line 80 in file print.s
   Uses
      At line 69 in file print.s
Comment: Incase used once
LCD_OutDec 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: LCD_OutDec
   Definitions
      At line 42 in file print.s
   Uses
      At line 27 in file print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000078

Symbol: LCD_OutFix
   Definitions
      At line 106 in file print.s
   Uses
      At line 28 in file print.s
Comment: LCD_OutFix used once
Mod 0000012E

Symbol: Mod
   Definitions
      At line 171 in file print.s
   Uses
      At line 119 in file print.s
      At line 124 in file print.s
      At line 130 in file print.s
      At line 175 in file print.s

NumDiv 00000012

Symbol: NumDiv
   Definitions
      At line 50 in file print.s
   Uses
      At line 54 in file print.s
Comment: NumDiv used once
Output 0000004A

Symbol: Output
   Definitions
      At line 71 in file print.s
   Uses
      At line 64 in file print.s
      At line 79 in file print.s
      At line 88 in file print.s

Pop4 00000064

Symbol: Pop4
   Definitions
      At line 84 in file print.s
   Uses
      At line 82 in file print.s
Comment: Pop4 used once
PopStack 0000012A

Symbol: PopStack
   Definitions
      At line 168 in file print.s
   Uses
      At line 142 in file print.s
      At line 161 in file print.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Reinit 00000010

Symbol: Reinit
   Definitions
      At line 48 in file print.s
   Uses
      At line 70 in file print.s
      At line 83 in file print.s

Repeat 00000114

Symbol: Repeat
   Definitions
      At line 159 in file print.s
   Uses
      At line 167 in file print.s
Comment: Repeat used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

MAX 00002710

Symbol: MAX
   Definitions
      At line 34 in file print.s
   Uses
      At line 111 in file print.s
Comment: MAX used once
THOUSAND 000003E8

Symbol: THOUSAND
   Definitions
      At line 35 in file print.s
   Uses
      At line 129 in file print.s
Comment: THOUSAND used once
fin FFFFFFFF

Symbol: fin
   Definitions
      At line 36 in file print.s
   Uses
      At line 66 in file print.s
      At line 114 in file print.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_Goto 00000000

Symbol: LCD_Goto
   Definitions
      At line 25 in file print.s
   Uses
      None
Comment: LCD_Goto unused
LCD_OutChar 00000000

Symbol: LCD_OutChar
   Definitions
      At line 24 in file print.s
   Uses
      At line 76 in file print.s
      At line 145 in file print.s
      At line 153 in file print.s
      At line 157 in file print.s
      At line 164 in file print.s

LCD_OutString 00000000

Symbol: LCD_OutString
   Definitions
      At line 26 in file print.s
   Uses
      None
Comment: LCD_OutString unused
3 symbols
353 symbols in table
